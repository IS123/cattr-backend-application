integration_testing:
  image: php:7.4-alpine
  services:
    - name: mysql:latest
      alias: mysql
      command: ["--default-authentication-plugin=mysql_native_password"]
  variables:
    MYSQL_DATABASE: amazing_time_tests
    MYSQL_ROOT_PASSWORD: secret
  stage: test
  before_script:
    - apk update
    - apk add libpng-dev freetype-dev libjpeg-turbo-dev libjpeg-turbo libpng freetype libzip libzip-dev
    - docker-php-ext-install bcmath zip pdo_mysql gd
    - apk add --no-cache $PHPIZE_DEPS
    - pecl install xdebug
    - docker-php-ext-enable xdebug
    - curl --silent --show-error https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
  script:
    - composer install
    - cp .env.testing.example .env.testing
    - php artisan migrate --env=testing
    - php artisan db:seed --class=RoleSeeder --env=testing
    - vendor/phpunit/phpunit/phpunit --coverage-text --colors=never --configuration phpunit.xml tests/Feature/

apidoc_deploy:
  image: node:alpine
  stage: deploy
  only:
    - release
  before_script:
    - 'which ssh-agent || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
    - echo "$CI_SSH_DEPLOY_SECRET" | ssh-add -
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - npm install
  script:
    - npm run api-nsl
    - ssh cattr-deploy@docs.cattr.app 'rm -rf /srv/docs/api/*'
    - scp -r apidoc/* cattr-deploy@docs.cattr.app:/srv/docs/api
