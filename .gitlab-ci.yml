# Available environments:
# - $ENV = DEVELOPMENT
# - $ENV = STAGE
# - $ENV = PRODUCTION

# Required to setup next project secret variables:
# - ${ENV}_SSH_IP
# - ${ENV}_SSH_USER
# - ${ENV}_SSH_PASSWORD - private ssh key!

# Ð¢ot mandatory variables (with defaults):
# - ${ENV}_SSH_PATH = /opt/amazing-time
# - ${ENV}_SSH_PORT = 22
# - ${ENV}_STORAGE_PATH = $PRODUCTION_SSH_PATH/storage

# Folders and files on production
# - ${ENV}_STORAGE_PATH - persistent storage
# - ${ENV}_SSH_PATH - project CD work folder
# - --/storage - default persistent storage path (if $PRODUCTION_STORAGE_PATH not setted)
# - --/builds - builds folder
# - --/current - symlink to current deployed version
# - --/.build_id - current build id (for version history)
# - --/.build_history - history of version changes (for rollback strategy)

# Web server should be setuped to path: $PRODUCTION_SSH_PATH/current/public

stages:
  - build
  - pack
  - deploy

cache:
  # using single cache volume
  key: package-cache
  untracked: true
  paths:
    - public/js
    - public/apidoc
    - vendor/
    - build-pack.tar.gz

##################
### Build Jobs ###
##################

build-backend:
  stage: build
  only:
    variables:
      - $CI_COMMIT_TAG =~ /^(development|stage|release)-.*/
  script:
    - deploy/01.1.build-composer.sh

build-front:
  stage: build
  only:
    variables:
      - $CI_COMMIT_TAG =~ /^(development|stage|release)-.*/
  script:
    - deploy/01.2.build-npm.sh

##############################
### Create package archive ###
##############################

create-package:
  stage: pack
  only:
    variables:
      - $CI_COMMIT_TAG =~ /^(development|stage|release)-.*/
  script:
    - deploy/02.1.create-package.sh

########################
### Deploy to server ###
########################

deploy-development:
  stage: deploy
  variables:
    DEPLOY_ENVIRONMENT: "development"
    DEPLOY_SSH_USER: "${DEVELOPMENT_SSH_USER}"
    DEPLOY_SSH_IP: "${DEVELOPMENT_SSH_IP}"
    DEPLOY_SSH_PASSWORD: "${DEVELOPMENT_SSH_PASSWORD}"
    DEPLOY_SSH_PATH: "${DEVELOPMENT_SSH_PATH}"
    DEPLOY_SSH_PORT: "${DEVELOPMENT_SSH_PORT}"
    DEPLOY_STORAGE_PATH: "${DEVELOPMENT_STORAGE_PATH}"
  only:
    variables:
      - $CI_COMMIT_TAG =~ /^development-.*/
  script:
    - deploy/03.1.upload.sh

deploy-stage:
  stage: deploy
  variables:
    DEPLOY_ENVIRONMENT: "stage"
    DEPLOY_SSH_USER: "${STAGE_SSH_USER}"
    DEPLOY_SSH_IP: "${STAGE_SSH_IP}"
    DEPLOY_SSH_PASSWORD: "${STAGE_SSH_PASSWORD}"
    DEPLOY_SSH_PATH: "${STAGE_SSH_PATH}"
    DEPLOY_SSH_PORT: "${STAGE_SSH_PORT}"
    DEPLOY_STORAGE_PATH: "${STAGE_STORAGE_PATH}"
  only:
    variables:
      - $CI_COMMIT_TAG =~ /^stage-.*/
  script:
    - deploy/03.1.upload.sh

deploy-production:
  stage: deploy
  variables:
    DEPLOY_ENVIRONMENT: "production"
    DEPLOY_SSH_USER: "${PRODUCTION_SSH_USER}"
    DEPLOY_SSH_IP: "${PRODUCTION_SSH_IP}"
    DEPLOY_SSH_PASSWORD: "${PRODUCTION_SSH_PASSWORD}"
    DEPLOY_SSH_PATH: "${PRODUCTION_SSH_PATH}"
    DEPLOY_SSH_PORT: "${PRODUCTION_SSH_PORT}"
    DEPLOY_STORAGE_PATH: "${PRODUCTION_STORAGE_PATH}"
  only:
    variables:
      - $CI_COMMIT_TAG =~ /^release-.*/
  script:
    - deploy/03.1.upload.sh
